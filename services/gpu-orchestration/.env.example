# AIMA GPU Orchestration Service - Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Debug mode (true/false)
DEBUG=true

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Secret key for cryptographic operations (generate a strong random key)
SECRET_KEY=your-super-secret-key-change-this-in-production

# Allowed hosts (comma-separated list)
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_RELOAD=true

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database URL
DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/gpu_orchestration

# Database connection pool settings
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis URL for caching and sessions
REDIS_URL=redis://localhost:6379/0

# Redis connection settings
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_MAX_CONNECTIONS=100
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# =============================================================================
# CELERY CONFIGURATION
# =============================================================================

# Celery broker and result backend
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2

# Celery worker settings
CELERY_WORKER_CONCURRENCY=4
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=json
CELERY_TIMEZONE=UTC
CELERY_ENABLE_UTC=true

# Task routing
CELERY_TASK_ROUTES_GPU_TASKS=gpu_queue
CELERY_TASK_ROUTES_MONITORING_TASKS=monitoring_queue
CELERY_TASK_ROUTES_CLEANUP_TASKS=cleanup_queue

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Prometheus metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
METRICS_ENABLED=true
METRICS_PATH=/metrics

# Sentry error tracking
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_PROFILES_SAMPLE_RATE=0.1

# OpenTelemetry tracing
OTEL_EXPORTER_JAEGER_ENDPOINT=http://localhost:14268/api/traces
OTEL_SERVICE_NAME=aima-gpu-orchestration
OTEL_RESOURCE_ATTRIBUTES=service.name=aima-gpu-orchestration,service.version=1.0.0

# Grafana credentials
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin

# Flower monitoring
FLOWER_USER=admin
FLOWER_PASSWORD=admin

# =============================================================================
# CLOUD PROVIDER CREDENTIALS
# =============================================================================

# AWS Configuration
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-west-2
AWS_SESSION_TOKEN=
AWS_PROFILE=

# AWS EC2 Settings
AWS_EC2_INSTANCE_TYPES=p3.2xlarge,p3.8xlarge,p3.16xlarge,p4d.24xlarge
AWS_EC2_KEY_PAIR_NAME=
AWS_EC2_SECURITY_GROUP_ID=
AWS_EC2_SUBNET_ID=
AWS_EC2_IAM_INSTANCE_PROFILE=

# Google Cloud Platform
GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/gcp-service-account.json
GCP_PROJECT_ID=
GCP_REGION=us-central1
GCP_ZONE=us-central1-a

# GCP Compute Engine Settings
GCP_MACHINE_TYPES=n1-standard-4,n1-highmem-4,a2-highgpu-1g
GCP_GPU_TYPES=nvidia-tesla-v100,nvidia-tesla-p100,nvidia-tesla-t4
GCP_DISK_SIZE=100
GCP_DISK_TYPE=pd-ssd

# Microsoft Azure
AZURE_CLIENT_ID=
AZURE_CLIENT_SECRET=
AZURE_TENANT_ID=
AZURE_SUBSCRIPTION_ID=
AZURE_RESOURCE_GROUP=
AZURE_LOCATION=eastus

# Azure VM Settings
AZURE_VM_SIZES=Standard_NC6,Standard_NC12,Standard_NC24
AZURE_GPU_TYPES=Tesla_V100,Tesla_P100,Tesla_K80

# =============================================================================
# GPU PROVIDER APIS
# =============================================================================

# RunPod Configuration
RUNPOD_API_KEY=
RUNPOD_API_URL=https://api.runpod.ai/graphql
RUNPOD_WEBHOOK_SECRET=

# Vast.ai Configuration
VAST_API_KEY=
VAST_API_URL=https://console.vast.ai/api/v0
VAST_WEBHOOK_SECRET=

# Lambda Labs Configuration
LAMBDA_API_KEY=
LAMBDA_API_URL=https://cloud.lambdalabs.com/api/v1

# Paperspace Configuration
PAPERSPACE_API_KEY=
PAPERSPACE_API_URL=https://api.paperspace.io

# Genesis Cloud Configuration
GENESIS_API_KEY=
GENESIS_API_URL=https://api.genesiscloud.com/v1

# =============================================================================
# KUBERNETES CONFIGURATION
# =============================================================================

# Kubernetes cluster configuration
KUBERNETES_CONFIG_PATH=/app/config/kubeconfig
KUBERNETES_NAMESPACE=gpu-orchestration
KUBERNETES_SERVICE_ACCOUNT=gpu-orchestration-sa

# Kubernetes resource limits
KUBERNETES_CPU_LIMIT=2
KUBERNETES_MEMORY_LIMIT=4Gi
KUBERNETES_GPU_LIMIT=1

# Helm configuration
HELM_CHART_REPOSITORY=https://charts.aima.ai
HELM_CHART_VERSION=1.0.0

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker registry settings
DOCKER_REGISTRY=docker.io
DOCKER_REPOSITORY=aima/gpu-orchestration
DOCKER_TAG=latest

# Docker build settings
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# JWT Configuration
JWT_SECRET_KEY=your-jwt-secret-key
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# API Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=20

# CORS Settings
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=*
CORS_ALLOW_CREDENTIALS=true

# SSL/TLS Settings
SSL_ENABLED=false
SSL_CERT_PATH=/app/ssl/cert.pem
SSL_KEY_PATH=/app/ssl/key.pem

# =============================================================================
# MACHINE LEARNING SETTINGS
# =============================================================================

# Model storage
MODEL_STORAGE_BACKEND=s3
MODEL_STORAGE_BUCKET=aima-models
MODEL_STORAGE_PREFIX=gpu-orchestration/

# Hugging Face Hub
HUGGINGFACE_HUB_TOKEN=
HUGGINGFACE_HUB_CACHE_DIR=/app/cache/huggingface

# MLflow tracking
MLFLOW_TRACKING_URI=http://localhost:5000
MLFLOW_EXPERIMENT_NAME=gpu-orchestration
MLFLOW_ARTIFACT_ROOT=s3://aima-mlflow-artifacts

# Weights & Biases
WANDB_API_KEY=
WANDB_PROJECT=aima-gpu-orchestration
WANDB_ENTITY=

# =============================================================================
# NOTIFICATION SETTINGS
# =============================================================================

# Email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_TLS=true
SMTP_SSL=false
EMAIL_FROM=noreply@aima.ai

# Slack notifications
SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#gpu-orchestration
SLACK_USERNAME=AIMA GPU Bot

# Discord notifications
DISCORD_WEBHOOK_URL=

# Telegram notifications
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=

# =============================================================================
# BACKUP AND STORAGE
# =============================================================================

# Database backup
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=aima-backups
BACKUP_S3_PREFIX=gpu-orchestration/

# Log storage
LOG_STORAGE_BACKEND=file
LOG_STORAGE_PATH=/app/logs
LOG_ROTATION_SIZE=100MB
LOG_RETENTION_DAYS=30

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Connection pooling
CONNECTION_POOL_SIZE=20
CONNECTION_POOL_MAX_OVERFLOW=30
CONNECTION_POOL_TIMEOUT=30

# Caching
CACHE_TTL=3600
CACHE_MAX_SIZE=1000
CACHE_BACKEND=redis

# Request timeout
REQUEST_TIMEOUT=30
CONNECT_TIMEOUT=10
READ_TIMEOUT=30

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development tools
DEV_RELOAD=true
DEV_DEBUG_TOOLBAR=true
DEV_PROFILER=false

# Testing
TEST_DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/gpu_orchestration_test
TEST_REDIS_URL=redis://localhost:6379/15

# Code quality
PRE_COMMIT_ENABLED=true
CODE_COVERAGE_THRESHOLD=80

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Feature toggles
FEATURE_GPU_MONITORING=true
FEATURE_AUTO_SCALING=true
FEATURE_COST_OPTIMIZATION=true
FEATURE_MULTI_CLOUD=true
FEATURE_KUBERNETES_INTEGRATION=true
FEATURE_ML_PIPELINE=true
FEATURE_REAL_TIME_METRICS=true
FEATURE_ADVANCED_SCHEDULING=true
FEATURE_RESOURCE_PREDICTION=true
FEATURE_AUTOMATED_FAILOVER=true

# Experimental features
EXPERIMENTAL_QUANTUM_COMPUTING=false
EXPERIMENTAL_EDGE_COMPUTING=false
EXPERIMENTAL_FEDERATED_LEARNING=false

# =============================================================================
# CUSTOM SETTINGS
# =============================================================================

# Add your custom environment variables here
# CUSTOM_SETTING_1=value1
# CUSTOM_SETTING_2=value2