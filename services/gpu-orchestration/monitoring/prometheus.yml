# Prometheus configuration for AIMA GPU Orchestration Service
# This configuration defines scraping targets and rules for monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'aima-gpu-orchestration'
    environment: 'development'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # AIMA GPU Orchestration Service
  - job_name: 'gpu-orchestration'
    static_configs:
      - targets: ['gpu-orchestration:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # AIMA GPU Orchestration API Health
  - job_name: 'gpu-orchestration-health'
    static_configs:
      - targets: ['gpu-orchestration:8000']
    scrape_interval: 30s
    metrics_path: /health
    scrape_timeout: 5s

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s
    metrics_path: /metrics
    # Note: Requires postgres_exporter to be installed

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    metrics_path: /metrics
    # Note: Requires redis_exporter to be installed

  # RabbitMQ Message Broker
  - job_name: 'rabbitmq'
    static_configs:
      - targets: ['rabbitmq:15692']
    scrape_interval: 30s
    metrics_path: /metrics
    # Note: Requires rabbitmq_prometheus plugin

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: /metrics

  # GPU Provider APIs (external monitoring)
  - job_name: 'runpod-api'
    static_configs:
      - targets: ['api.runpod.ai']
    scrape_interval: 60s
    metrics_path: /health
    scheme: https
    scrape_timeout: 10s

  - job_name: 'vast-api'
    static_configs:
      - targets: ['console.vast.ai']
    scrape_interval: 60s
    metrics_path: /api/v0/health
    scheme: https
    scrape_timeout: 10s

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"

# Remote read configuration
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint/api/v1/read"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Web configuration
web:
  enable-lifecycle: true
  enable-admin-api: true
  console.templates: /etc/prometheus/consoles
  console.libraries: /etc/prometheus/console_libraries