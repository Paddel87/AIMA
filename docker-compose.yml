version: '3.8'

services:
  # API Gateway
  traefik:
    image: traefik:v3.0
    container_name: aima-gateway
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - aima-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: aima-postgres
    environment:
      POSTGRES_DB: aima
      POSTGRES_USER: aima_user
      POSTGRES_PASSWORD: aima_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - aima-network

  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: aima-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: aima_user
      MONGO_INITDB_ROOT_PASSWORD: aima_password
      MONGO_INITDB_DATABASE: aima
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - aima-network

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: aima-redis
    command: redis-server --requirepass aima_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - aima-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: aima-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: aima_user
      MINIO_ROOT_PASSWORD: aima_password
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - aima-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: aima-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: aima_user
      RABBITMQ_DEFAULT_PASS: aima_password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    networks:
      - aima-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: aima-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - aima-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: aima-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: aima_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    networks:
      - aima-network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  minio_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  aima-network:
    driver: bridge